{"version":3,"sources":["components/List.js","components/New.js","components/Detail.js","components/Edit.js","App.js","serviceWorker.js","index.js"],"names":["List","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","axios","get","then","res","setState","pets","data","catch","err","console","log","state","react_default","a","createElement","className","sort","b","type","map","pet","key","_id","name","description","react_router_dom","to","Component","New","change","e","p","objectSpread","newPet","target","value","makePet","preventDefault","post","errors","history","push","skill1","skill2","skill3","onSubmit","onChange","bind","message","Detail","match","params","concat","addLike","like","liked","put","delete","assertThisInitialized","disabled","onClick","Edit","updatePet","App","href","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72916424.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass List extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        pets: []\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    axios.get(\"/api/pets\")\r\n      .then( res => {\r\n        this.setState({pets: res.data.pets});\r\n      })\r\n      .catch( err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          <div>\r\n            <h2 className=\"newpets\">These Pets are looking for a home!</h2>\r\n            <table className=\"pets\">\r\n              <thead>\r\n                  <tr>\r\n                    <th>Name:</th> \r\n                    <th>Type:</th>\r\n                    <th>Description:</th>\r\n                    <th>Actions:</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n              {\r\n                this.state.pets.sort(function(a,b){\r\n                    if(a.type < b.type){return -1;}\r\n                    if(a.type > b.type){return 1;}\r\n                    return 0;\r\n                }).map( pet =>\r\n                  <tr key={pet._id}>\r\n                      <td>{pet.name}</td>\r\n                      <td>{pet.type}</td> \r\n                      <td>{pet.description}</td>\r\n                      <td>\r\n                          <span><Link className=\"single\" to={\"/pets/\" + pet._id}>Detail</Link>\r\n                          &nbsp;\r\n                          <Link className=\"single\" to={\"/edit/\" + pet._id}>Edit</Link></span>\r\n                      </td>\r\n                  </tr>\r\n                  )}\r\n                </tbody>\r\n            </table>\r\n          </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default List;","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nclass New extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newPet: {\r\n          name: \"\",\r\n          type: \"\",\r\n          description: \"\",\r\n          skill1: \"\",\r\n          skill2: \"\",\r\n          skill3: \"\"\r\n      },\r\n      errors: {}\r\n    }\r\n  }\r\n\r\n  change = (key, e) => {\r\n      let p = {...this.state.newPet};\r\n      p[key] = e.target.value;\r\n      this.setState({newPet: p});\r\n  }\r\n\r\n  makePet = (e) => {\r\n    e.preventDefault();\r\n    axios.post(\"/api/pets\", this.state.newPet)\r\n      .then( res => {\r\n        if(res.data.errors){\r\n          this.setState({errors: res.data.errors.errors})\r\n        } else {\r\n          this.props.history.push(\"/\");\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"newpets\">\r\n      <h2>Know of a pet needing a home?</h2>\r\n      <form onSubmit={this.makePet}>\r\n          <div className=\"form-group\">\r\n              <label>Pet Name:</label>\r\n              <input type=\"text\" onChange={this.change.bind(this, \"name\")} />\r\n              {\r\n                this.state.errors.name ? \r\n                <p>{this.state.errors.name.message}</p>:\r\n                \"\"\r\n              }\r\n          </div>\r\n          <div className=\"form-group\">\r\n              <label>Pet Type:</label>\r\n              <input type=\"text\" onChange={this.change.bind(this, \"type\")} />\r\n              {\r\n                this.state.errors.type ? \r\n                <p>{this.state.errors.type.message}</p>:\r\n                \"\"\r\n              }\r\n          </div>\r\n          <div className=\"form-group\">\r\n              <label>Pet Description:</label>\r\n              <input type=\"text\" onChange={this.change.bind(this, \"description\")} />\r\n              {\r\n                this.state.errors.description ? \r\n                <p>{this.state.errors.description.message}</p>:\r\n                \"\"\r\n              }\r\n          </div>\r\n          <div className=\"form-group\">\r\n              <label>Pet Skill 1:</label>\r\n              <input type=\"text\" onChange={this.change.bind(this, \"skill1\")} />\r\n              {\r\n                this.state.errors.skill1 ? \r\n                <p>{this.state.errors.skill1.message}</p>:\r\n                \"\"\r\n              }\r\n          </div>\r\n          <div className=\"form-group\">\r\n              <label>Pet Skill 2:</label>\r\n              <input type=\"text\" onChange={this.change.bind(this, \"skill2\")} />\r\n              {\r\n                this.state.errors.skill2 ? \r\n                <p>{this.state.errors.skill2.message}</p>:\r\n                \"\"\r\n              }\r\n          </div>\r\n          <div className=\"form-group\">\r\n              <label>Pet Skill 3:</label>\r\n              <input type=\"text\" onChange={this.change.bind(this, \"skill3\")} />\r\n              {\r\n                this.state.errors.skill3 ? \r\n                <p>{this.state.errors.skill3.message}</p>:\r\n                \"\"\r\n              }\r\n          </div>\r\n          <input type=\"submit\" className=\"btn-submit\" />\r\n      </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default New\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Detail extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      pet: {\r\n        name: \"\",\r\n        type: \"\",\r\n        description: \"\",\r\n        skill1: \"\",\r\n        skill2: \"\",\r\n        skill3: \"\",\r\n        like: 0,\r\n        liked: false\r\n      },\r\n      errors: {}\r\n    };\r\n    this.addLike = this.addLike.bind(this);\r\n  }\r\n  componentDidMount = () => {\r\n    console.log(this.props.match.params._id);\r\n    axios.get(`/api/pets/${this.props.match.params._id}`)\r\n      .then( res => {\r\n        this.setState({pet: res.data.pet});\r\n      })\r\n      .catch( err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  addLike = (e) =>{\r\n    let like = this.state.pet.like + 1;\r\n    this.state.pet.like ++;\r\n    this.state.pet.liked = true;\r\n    this.setState({pet: {...this.state.pet, like: like, liked:true}});\r\n    axios.put(`/api/pets/${this.props.match.params._id}`, this.state.pet)\r\n        .then( res =>{\r\n          this.componentDidMount();\r\n        })\r\n        .catch( err => {\r\n          console.log(err);\r\n        });\r\n  }\r\n  delete = (_id) => {\r\n    axios.delete(`/api/pets/${this.props.match.params._id}`)\r\n      .then( res => {\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch( err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"newpets\">\r\n        <h1>Details about {this.state.pet.name}</h1>\r\n        <h3>Pet Type: {this.state.pet.type}</h3>\r\n        <h3>Description: {this.state.pet.description}</h3>\r\n          <h4>Skill 1:  {this.state.pet.skill1}</h4>\r\n          <h4>Skill 2:  {this.state.pet.skill2}</h4>\r\n          <h4>Skill 3:  {this.state.pet.skill3}</h4>\r\n        <h3>Likes: {this.state.pet.like} </h3>\r\n        <button disabled={this.state.pet.liked} onClick={this.addLike}>Like this Pet</button>\r\n        <button onClick={this.delete}>Adopt this pet</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Detail;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Edit extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        pet: {\r\n            name: \"\",\r\n            type: \"\",\r\n            description: \"\",\r\n            skill1: \"\",\r\n            skill2: \"\",\r\n            skill3: \"\",\r\n            like: 0,\r\n            liked:false\r\n        },\r\n      errors: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    console.log(this.props.match.params._id);\r\n    axios.get(`/api/pets/${this.props.match.params._id}`)\r\n      .then( res => {\r\n        this.setState({pet: res.data.pet});\r\n      })\r\n      .catch( err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  change = (key, e) => {\r\n    let p = {...this.state.pet};\r\n    p[key] = e.target.value;\r\n    this.setState({pet: p});\r\n  }\r\n\r\n  updatePet = (e) => {\r\n    e.preventDefault();\r\n    axios.put(`/api/pets/${this.state.pet._id}`, this.state.pet)\r\n      .then( res => {\r\n        if(res.data.errors){\r\n          this.setState({errors: res.data.errors.errors})\r\n        } else {\r\n          this.props.history.push(\"/\");\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"newpets\">\r\n            <h2>Edit This Pet</h2>\r\n            <form onSubmit={this.updatePet}>\r\n          <div className=\"form-group\">\r\n              <label>Pet Name:</label>\r\n              <input type=\"text\" onChange={this.change.bind(this, \"name\")} value={this.state.pet.name} />\r\n              {\r\n                this.state.errors.name ? \r\n                <p>{this.state.errors.name.message}</p>:\r\n                \"\"\r\n              }\r\n          </div>\r\n          <div className=\"form-group\">\r\n              <label>Pet Type:</label>\r\n              <input type=\"text\" onChange={this.change.bind(this, \"type\")} value={this.state.pet.type}/>\r\n              {\r\n                this.state.errors.type ? \r\n                <p>{this.state.errors.type.message}</p>:\r\n                \"\"\r\n              }\r\n          </div>\r\n          <div className=\"form-group\">\r\n              <label>Pet Description:</label>\r\n              <input type=\"text\" onChange={this.change.bind(this, \"description\")} value={this.state.pet.description}/>\r\n              {\r\n                this.state.errors.description ? \r\n                <p>{this.state.errors.description.message}</p>:\r\n                \"\"\r\n              }\r\n          </div>\r\n          <div className=\"form-group\">\r\n              <label>Pet Skill 1:</label>\r\n              <input type=\"text\" onChange={this.change.bind(this, \"skill1\")} value={this.state.pet.skill1}/>\r\n              {\r\n                this.state.errors.skill1 ? \r\n                <p>{this.state.errors.skill1.message}</p>:\r\n                \"\"\r\n              }\r\n          </div>\r\n          <div className=\"form-group\">\r\n              <label>Pet Skill 2:</label>\r\n              <input type=\"text\" onChange={this.change.bind(this, \"skill2\")} value={this.state.pet.skill2}/>\r\n              {\r\n                this.state.errors.skill2 ? \r\n                <p>{this.state.errors.skill2.message}</p>:\r\n                \"\"\r\n              }\r\n          </div>\r\n          <div className=\"form-group\">\r\n              <label>Pet Skill 3:</label>\r\n              <input type=\"text\" onChange={this.change.bind(this, \"skill3\")} value={this.state.pet.skill3}/>\r\n              {\r\n                this.state.errors.skill3 ? \r\n                <p>{this.state.errors.skill3.message}</p>:\r\n                \"\"\r\n              }\r\n          </div>\r\n          <input type=\"submit\" className=\"btn-submit\" />\r\n      </form>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Edit","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport List from './components/List';\nimport New from './components/New';\nimport Detail from './components/Detail';\nimport Edit from './components/Edit';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"jumbotron\">\n          <h1>Pet Shelter</h1>\n        </div>\n        <div className=\"nav\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/new\">New</Link>\n            <a href=\"#!\">About</a>\n            <a href=\"#!\">Contact Us</a>\n            <a href=\"#!\">Blog</a>\n        </div>\n          <div className=\"container\">\n          <Route exact path=\"/\" component={List} />\n          <Route path=\"/new\" component={New} />\n          <Route path=\"/pets/:_id\" component={Detail} />\n          <Route path=\"/edit/:_id\" component={Edit} /> \n          </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}